
- $id: options
  type: object
  additionalProperties: false
  properties:
    node-version:
      enum: ["14.x", "15.x", "16.x"]
    protocol:
      enum: [inline, messaging, http1, http2]
    host: {const: localhost}
    port:
      anyOf:
        - type: integer
          minimum: 0
          maximum: 65535
        - type: string
    hook-cjs: {type: boolean}
    hook-esm: {type: boolean}
    hook-child-process: {type: boolean}
    rc-file: {type: string}

- $id: configuration
  type: object
  additionalProperties: false
  properties:
    extends: {type: string}
    enabled: {type: boolean}
    escape-prefix:
      type: string
      pattern: "^[a-zA-Z_$][a-zA-Z_$-9]*$"
    output-dir: {type: string}
    app-name: {type: string}
    name: {type: string}
    map-name: {type: string}
    git-dir: {type: string}
    feature: {type: string}
    feature-group: {type: string}
    labels:
      type: array
      items: {type: string}
    recorder-name: {type: string}
    recording-defined-class: {type: string}
    recording-method-id: {type: string}
    frameworks:
      type: array
      items:
        type: object
        additionalProperties: false
        required: [name, version]
        properties:
          name: {type: string}
          version: {type: string}
    language-engine: {type: string}
    language-version:
      enum:
        - "5"
        - "5.1"
        - "6"
        - "2015"
        - "7"
        - "2016"
        - "8"
        - "2017"
        - "9"
        - "2018"
        - "10"
        - "2019"
        - "11"
        - "2020"
        - "12"
        - "2021"
    packages:
      type: array
      items:
        anyOf:
          - {type: string}
          - type: object
            additionalProperties: false
            properties:
              dist: {type: string}
              path: {type: string}
              shallow: {type: boolean}
              exclude:
                type: array
                items: {type: string}
    exclude:
      type: array
      items: {type: string}

- $id: request
  anyOf:
    - type: object
      additionalProperties: false
      required: [name, process, configuration]
      properties:
        name: {const: initialize}
        process:
          type: object
          additionalProperties: false
          required: [env, argv]
          properties:
            env:
              type: object
              patternProperties:
                ".": {type: string}
            version: {type: string}
            arch: {type: string}
            platform: {type: string}
            pid: {type: integer}
            ppid: {type: integer}
            execPath: {type: string}
            execArgv:
              type: array
              items: {type: string}
            argv:
              type: array
              items: {type: string}
        configuration: {$ref: configuration}
    - type: object
      additionalProperties: false
      required: [name, session, source, path, content]
      properties:
        name: {const: instrument}
        session: {type: string}
        source:
          enum: [script, module]
        path: {type: string}
        content: {type: string}
    - type: object
      additionalProperties: false
      required: [name, session, event]
      properties:
        name: {const: record}
        session: {type: string}
        event:
          type: object
          additionalProperties: true
          required: [id, event]
          properties:
            id: {type: integer}
            event:
              enum: [call, return]
    - type: object
      additionalProperties: false
      required: [name, session, sync, reason]
      properties:
        name: {const: terminate}
        session: {type: string}
        sync: {type: boolean}
        reason: {}
